{"is_source_file": true, "format": "Python", "description": "This file implements a REST API server for a to-do list application using Flask and SQLite. It provides endpoints to create, read, update, delete, and toggle tasks, alongside health check and CORS configuration.", "external_files": ["flask", "flask_cors", "sqlite3", "os"], "external_methods": ["Flask", "request.get_json", "jsonify", "CORS"], "published": ["health", "list_tasks", "create_task", "update_task", "toggle_task", "delete_task"], "classes": [], "methods": [{"name": "get_db_connection()", "description": "Creates and returns a new SQLite database connection with row factory enabled for dict-like access.", "scope": "", "scopeKind": ""}, {"name": "init_db()", "description": "Initializes the database schema by creating the 'tasks' table if it does not exist.", "scope": "", "scopeKind": ""}, {"name": "health()", "description": "Health check endpoint returning a simple OK status.", "scope": "", "scopeKind": ""}, {"name": "list_tasks()", "description": "Retrieves and returns all tasks from the database.", "scope": "", "scopeKind": ""}, {"name": "create_task()", "description": "Creates a new task with a provided title.", "scope": "", "scopeKind": ""}, {"name": "update_task(task_id: int)", "description": "Updates the title and/or completion status of an existing task identified by task ID.", "scope": "", "scopeKind": ""}, {"name": "toggle_task(task_id: int)", "description": "Toggles the 'completed' state of the specified task.", "scope": "", "scopeKind": ""}, {"name": "delete_task(task_id: int)", "description": "Deletes a task by its ID.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Sets up the database and starts the Flask application server.", "scope": "", "scopeKind": ""}], "calls": ["sqlite3.connect", "conn.execute", "conn.commit", "conn.close", "app.run"], "search-terms": ["tasks CRUD api", "Flask SQLite to-do API", "task management REST server", "CORS Flask app", "task toggle endpoint"], "state": 2, "file_id": 10, "knowledge_revision": 29, "git_revision": "60f04b237176a69bd42ba6c45a571c4b99501d7c", "revision_history": [{"21": ""}, {"29": "60f04b237176a69bd42ba6c45a571c4b99501d7c"}], "ctags": [{"_type": "tag", "name": "DB_PATH", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^DB_PATH = os.environ.get(\"SQLITE_DB\", \".\\/myapp.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def create_task():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delete_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def delete_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "get_db_connection", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def get_db_connection():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def health():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def init_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_tasks", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def list_tasks():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "origins", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^origins = os.environ.get(\"CORS_ORIGINS\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "origins_list", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^    origins_list = [o.strip() for o in origins.split(\",\") if o.strip()]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "toggle_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def toggle_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "update_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def update_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}], "hash": "37da786f58d481a4c177a67f99dc267b", "format-version": 4, "code-base-name": "tasks_database", "filename": "tasks_database/api_server.py", "fields": [{"name": "DB_PATH = os.environ.get(\"SQLITE_DB\", \".\\/myapp.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "origins = os.environ.get(\"CORS_ORIGINS\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "origins_list = [o.strip() for o in origins.split(\",\") if o.strip()]", "scope": "", "scopeKind": "", "description": "unavailable"}]}