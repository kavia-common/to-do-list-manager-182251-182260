{"is_source_file": true, "format": "Python", "description": "This file implements a RESTful API server for managing tasks using Flask and a SQLite database. It provides endpoints for CRUD operations (Create, Read, Update, Delete) on tasks, including listing tasks, creating new ones, updating, toggling completion status, and deleting tasks. It also handles database connection setup and schema initialization.", "external_files": ["flask", "flask_cors", "sqlite3", "os", "datetime", "typing"], "external_methods": ["Flask()", "CORS()", "os.environ.get()", "os.path.join()", "os.path.dirname()", "sqlite3.connect()"], "published": ["list_tasks", "create_task", "update_task", "toggle_task", "delete_task"], "classes": [], "methods": [{"name": "str get_db_path()", "description": "Resolves the SQLite database path from environment variables or default value.", "scope": "", "scopeKind": ""}, {"name": "sqlite3.Connection get_connection()", "description": "Creates and configures a new SQLite connection with pragmas for foreign key enforcement and better concurrency.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] row_to_task(row: sqlite3.Row)", "description": "Converts a SQLite row to a dictionary representing a task, with boolean 'completed'.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_task_by_id(conn: sqlite3.Connection, task_id: int)", "description": "Fetches a task by its ID from the database.", "scope": "", "scopeKind": ""}, {"name": "list_tasks()", "description": "Handles GET /api/tasks to return a list of all tasks.", "scope": "", "scopeKind": ""}, {"name": "create_task()", "description": "Handles POST /api/tasks to create a new task with provided data.", "scope": "", "scopeKind": ""}, {"name": "update_task(task_id: int)", "description": "Handles PUT /api/tasks/<task_id> to update task fields.", "scope": "", "scopeKind": ""}, {"name": "toggle_task(task_id: int)", "description": "Handles PATCH /api/tasks/<task_id>/toggle to toggle the 'completed' state.", "scope": "", "scopeKind": ""}, {"name": "delete_task(task_id: int)", "description": "Handles DELETE /api/tasks/<task_id> to delete a task.", "scope": "", "scopeKind": ""}, {"name": "ensure_tasks_table()", "description": "Ensures the 'tasks' table exists in the database, creating it if necessary.", "scope": "", "scopeKind": ""}], "calls": ["get_connection()", "conn.execute()", "conn.commit()", "conn.close()", "get_task_by_id()", "datetime.utcnow().isoformat()", "request.get_json()", "jsonify()", "app.run()"], "search-terms": ["tasks API", "Flask CRUD server", "SQLite task database", "tasks_database/api_server.py", "task management endpoints"], "state": 2, "file_id": 10, "knowledge_revision": 21, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_DB", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^DEFAULT_DB = os.environ.get(\"SQLITE_DB\") or os.path.join(os.path.dirname(__file__), \"myapp.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DEFAULT_PORT", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^DEFAULT_PORT = int(os.environ.get(\"PORT\") or \"5001\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^app = Flask($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def create_task():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delete_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def delete_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "ensure_tasks_table", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def ensure_tasks_table():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_connection", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def get_connection() -> sqlite3.Connection:$/", "language": "Python", "typeref": "typename:sqlite3.Connection", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db_path", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def get_db_path() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_task_by_id", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def get_task_by_id(conn: sqlite3.Connection, task_id: int) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(conn: sqlite3.Connection, task_id: int)"}, {"_type": "tag", "name": "list_tasks", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def list_tasks():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "row_to_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def row_to_task(row: sqlite3.Row) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(row: sqlite3.Row)"}, {"_type": "tag", "name": "toggle_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def toggle_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "update_task", "path": "/home/kavia/workspace/code-generation/to-do-list-manager-182251-182260/tasks_database/api_server.py", "pattern": "/^def update_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}], "hash": "c83b5813d19bca98442f0d1411d33976", "format-version": 4, "code-base-name": "tasks_database", "filename": "tasks_database/api_server.py", "fields": [{"name": "DEFAULT_DB = os.environ.get(\"SQLITE_DB\") or os.path.join(os.path.dirname(__file__), \"myapp.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DEFAULT_PORT = int(os.environ.get(\"PORT\") or \"5001\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"21": ""}]}